//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace WebApi.Models
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class VendorConnectEntities : DbContext
    {
        public VendorConnectEntities()
            : base("name=VendorConnectEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<M_FinYear> M_FinYear { get; set; }
        public virtual DbSet<M_Forms> M_Forms { get; set; }
        public virtual DbSet<M_HSN_Control> M_HSN_Control { get; set; }
        public virtual DbSet<M_MACID> M_MACID { get; set; }
        public virtual DbSet<M_PLANT> M_PLANT { get; set; }
        public virtual DbSet<M_PO_OPBalance> M_PO_OPBalance { get; set; }
        public virtual DbSet<M_SysPara> M_SysPara { get; set; }
        public virtual DbSet<M_System_Parameter> M_System_Parameter { get; set; }
        public virtual DbSet<M_TAX> M_TAX { get; set; }
        public virtual DbSet<M_UnitToBeInteger> M_UnitToBeInteger { get; set; }
        public virtual DbSet<M_User_MacID> M_User_MacID { get; set; }
        public virtual DbSet<M_User_MacID_Det> M_User_MacID_Det { get; set; }
        public virtual DbSet<M_UserFormMapping> M_UserFormMapping { get; set; }
        public virtual DbSet<M_VENDOR> M_VENDOR { get; set; }
        public virtual DbSet<T_AIN_DOCNO> T_AIN_DOCNO { get; set; }
        public virtual DbSet<T_INVOICE_DETAIL> T_INVOICE_DETAIL { get; set; }
        public virtual DbSet<T_INVOICE_HEAD> T_INVOICE_HEAD { get; set; }
        public virtual DbSet<T_PO> T_PO { get; set; }
        public virtual DbSet<T_PO_SchDailyDetail> T_PO_SchDailyDetail { get; set; }
        public virtual DbSet<T_PO_SchMonthlyWeeklyDetail> T_PO_SchMonthlyWeeklyDetail { get; set; }
        public virtual DbSet<T_SMSLOG> T_SMSLOG { get; set; }
        public virtual DbSet<User> Users { get; set; }
        public virtual DbSet<M_PO_OPBalance_04NOV2017> M_PO_OPBalance_04NOV2017 { get; set; }
        public virtual DbSet<PODB20171004121158_04OCT2017_6001> PODB20171004121158_04OCT2017_6001 { get; set; }
        public virtual DbSet<T_INV_UNPOSTED> T_INV_UNPOSTED { get; set; }
        public virtual DbSet<T_InvoiceDetailDeleteByUser> T_InvoiceDetailDeleteByUser { get; set; }
        public virtual DbSet<T_InvoiceDetailDeleteByVendor> T_InvoiceDetailDeleteByVendor { get; set; }
        public virtual DbSet<T_InvoiceHeadDeleteByUser> T_InvoiceHeadDeleteByUser { get; set; }
        public virtual DbSet<T_InvoiceHeadDeleteByVendor> T_InvoiceHeadDeleteByVendor { get; set; }
        public virtual DbSet<VEN_MOBILE_NO> VEN_MOBILE_NO { get; set; }
    
        public virtual int SP_ChkTaxCode()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_ChkTaxCode");
        }
    
        public virtual int SP_ChkVendor()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_ChkVendor");
        }
    
        public virtual int SP_UpdateAutoGRNData(string plant, ObjectParameter erMsg, ObjectParameter status)
        {
            var plantParameter = plant != null ?
                new ObjectParameter("plant", plant) :
                new ObjectParameter("plant", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_UpdateAutoGRNData", plantParameter, erMsg, status);
        }
    
        public virtual int SP_Upload_PO_File(ObjectParameter erMsg, ObjectParameter status)
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_Upload_PO_File", erMsg, status);
        }
    
        public virtual int SP_Upload_PO_File_GST(ObjectParameter erMsg, ObjectParameter status)
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_Upload_PO_File_GST", erMsg, status);
        }
    
        public virtual int SP_Upload_Vendor_File(ObjectParameter erMsg, ObjectParameter status)
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_Upload_Vendor_File", erMsg, status);
        }
    
        public virtual int SP_Upload_Vendor_File_GST(ObjectParameter erMsg, ObjectParameter status)
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_Upload_Vendor_File_GST", erMsg, status);
        }
    
        public virtual int uspCheckCompCode(string compCode)
        {
            var compCodeParameter = compCode != null ?
                new ObjectParameter("CompCode", compCode) :
                new ObjectParameter("CompCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("uspCheckCompCode", compCodeParameter);
        }
    
        public virtual int uspCheckLogin(string usercode, string password)
        {
            var usercodeParameter = usercode != null ?
                new ObjectParameter("Usercode", usercode) :
                new ObjectParameter("Usercode", typeof(string));
    
            var passwordParameter = password != null ?
                new ObjectParameter("Password", password) :
                new ObjectParameter("Password", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("uspCheckLogin", usercodeParameter, passwordParameter);
        }
    
        public virtual ObjectResult<uspCheckPOdetail_Result> uspCheckPOdetail(Nullable<int> vendorCode, string pO_DOC_No, Nullable<int> item_no_of_podoc)
        {
            var vendorCodeParameter = vendorCode.HasValue ?
                new ObjectParameter("VendorCode", vendorCode) :
                new ObjectParameter("VendorCode", typeof(int));
    
            var pO_DOC_NoParameter = pO_DOC_No != null ?
                new ObjectParameter("PO_DOC_No", pO_DOC_No) :
                new ObjectParameter("PO_DOC_No", typeof(string));
    
            var item_no_of_podocParameter = item_no_of_podoc.HasValue ?
                new ObjectParameter("Item_no_of_podoc", item_no_of_podoc) :
                new ObjectParameter("Item_no_of_podoc", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<uspCheckPOdetail_Result>("uspCheckPOdetail", vendorCodeParameter, pO_DOC_NoParameter, item_no_of_podocParameter);
        }
    
        public virtual int uspCheckUserCode(string userCode)
        {
            var userCodeParameter = userCode != null ?
                new ObjectParameter("UserCode", userCode) :
                new ObjectParameter("UserCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("uspCheckUserCode", userCodeParameter);
        }
    
        public virtual int uspGenerateGateEntryNo(string docNo, string gATE_ENTRY_NO, Nullable<System.DateTime> gATE_ENTRY_DATE, Nullable<System.TimeSpan> gATE_ENTRY_TIME, Nullable<bool> gATE_Entry_YN, Nullable<int> gATE_ENTRY_CREATED_BY, Nullable<System.DateTime> gATE_ENTRY_CREATED_ON)
        {
            var docNoParameter = docNo != null ?
                new ObjectParameter("DocNo", docNo) :
                new ObjectParameter("DocNo", typeof(string));
    
            var gATE_ENTRY_NOParameter = gATE_ENTRY_NO != null ?
                new ObjectParameter("GATE_ENTRY_NO", gATE_ENTRY_NO) :
                new ObjectParameter("GATE_ENTRY_NO", typeof(string));
    
            var gATE_ENTRY_DATEParameter = gATE_ENTRY_DATE.HasValue ?
                new ObjectParameter("GATE_ENTRY_DATE", gATE_ENTRY_DATE) :
                new ObjectParameter("GATE_ENTRY_DATE", typeof(System.DateTime));
    
            var gATE_ENTRY_TIMEParameter = gATE_ENTRY_TIME.HasValue ?
                new ObjectParameter("GATE_ENTRY_TIME", gATE_ENTRY_TIME) :
                new ObjectParameter("GATE_ENTRY_TIME", typeof(System.TimeSpan));
    
            var gATE_Entry_YNParameter = gATE_Entry_YN.HasValue ?
                new ObjectParameter("GATE_Entry_YN", gATE_Entry_YN) :
                new ObjectParameter("GATE_Entry_YN", typeof(bool));
    
            var gATE_ENTRY_CREATED_BYParameter = gATE_ENTRY_CREATED_BY.HasValue ?
                new ObjectParameter("GATE_ENTRY_CREATED_BY", gATE_ENTRY_CREATED_BY) :
                new ObjectParameter("GATE_ENTRY_CREATED_BY", typeof(int));
    
            var gATE_ENTRY_CREATED_ONParameter = gATE_ENTRY_CREATED_ON.HasValue ?
                new ObjectParameter("GATE_ENTRY_CREATED_ON", gATE_ENTRY_CREATED_ON) :
                new ObjectParameter("GATE_ENTRY_CREATED_ON", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("uspGenerateGateEntryNo", docNoParameter, gATE_ENTRY_NOParameter, gATE_ENTRY_DATEParameter, gATE_ENTRY_TIMEParameter, gATE_Entry_YNParameter, gATE_ENTRY_CREATED_BYParameter, gATE_ENTRY_CREATED_ONParameter);
        }
    
        public virtual int uspGetAllUserByCompCode(string compCode)
        {
            var compCodeParameter = compCode != null ?
                new ObjectParameter("CompCode", compCode) :
                new ObjectParameter("CompCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("uspGetAllUserByCompCode", compCodeParameter);
        }
    
        public virtual ObjectResult<uspGetFormByName_Result> uspGetFormByName(string formName)
        {
            var formNameParameter = formName != null ?
                new ObjectParameter("FormName", formName) :
                new ObjectParameter("FormName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<uspGetFormByName_Result>("uspGetFormByName", formNameParameter);
        }
    
        public virtual ObjectResult<uspGetFormrights_Result> uspGetFormrights(Nullable<int> formId, Nullable<int> userId)
        {
            var formIdParameter = formId.HasValue ?
                new ObjectParameter("FormId", formId) :
                new ObjectParameter("FormId", typeof(int));
    
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<uspGetFormrights_Result>("uspGetFormrights", formIdParameter, userIdParameter);
        }
    
        public virtual ObjectResult<uspGetSystemParaByCompCode_Result> uspGetSystemParaByCompCode(string compCode)
        {
            var compCodeParameter = compCode != null ?
                new ObjectParameter("CompCode", compCode) :
                new ObjectParameter("CompCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<uspGetSystemParaByCompCode_Result>("uspGetSystemParaByCompCode", compCodeParameter);
        }
    
        public virtual ObjectResult<uspGetUserByUserCode_Result> uspGetUserByUserCode(string userCode)
        {
            var userCodeParameter = userCode != null ?
                new ObjectParameter("UserCode", userCode) :
                new ObjectParameter("UserCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<uspGetUserByUserCode_Result>("uspGetUserByUserCode", userCodeParameter);
        }
    
        public virtual int uspInsertInvoiceDeleteByUser(Nullable<int> pINVID, Nullable<int> userId, string deleteORCanceled, Nullable<System.DateTime> dELETED_ON)
        {
            var pINVIDParameter = pINVID.HasValue ?
                new ObjectParameter("PINVID", pINVID) :
                new ObjectParameter("PINVID", typeof(int));
    
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(int));
    
            var deleteORCanceledParameter = deleteORCanceled != null ?
                new ObjectParameter("DeleteORCanceled", deleteORCanceled) :
                new ObjectParameter("DeleteORCanceled", typeof(string));
    
            var dELETED_ONParameter = dELETED_ON.HasValue ?
                new ObjectParameter("DELETED_ON", dELETED_ON) :
                new ObjectParameter("DELETED_ON", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("uspInsertInvoiceDeleteByUser", pINVIDParameter, userIdParameter, deleteORCanceledParameter, dELETED_ONParameter);
        }
    
        public virtual int uspInsertInvoiceDeleteByVendor(Nullable<int> pINVID, Nullable<System.DateTime> dELETED_ON)
        {
            var pINVIDParameter = pINVID.HasValue ?
                new ObjectParameter("PINVID", pINVID) :
                new ObjectParameter("PINVID", typeof(int));
    
            var dELETED_ONParameter = dELETED_ON.HasValue ?
                new ObjectParameter("DELETED_ON", dELETED_ON) :
                new ObjectParameter("DELETED_ON", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("uspInsertInvoiceDeleteByVendor", pINVIDParameter, dELETED_ONParameter);
        }
    
        public virtual int uspInsertUser(string userCode, string fName, string mName, string lName, string password, string mACPassword, string designation, string userType, byte[] imageBytes, string extension, Nullable<System.DateTime> lastLogin, Nullable<bool> isActive, Nullable<bool> plant1, Nullable<bool> plant2, Nullable<bool> plant3, string loginType)
        {
            var userCodeParameter = userCode != null ?
                new ObjectParameter("UserCode", userCode) :
                new ObjectParameter("UserCode", typeof(string));
    
            var fNameParameter = fName != null ?
                new ObjectParameter("FName", fName) :
                new ObjectParameter("FName", typeof(string));
    
            var mNameParameter = mName != null ?
                new ObjectParameter("MName", mName) :
                new ObjectParameter("MName", typeof(string));
    
            var lNameParameter = lName != null ?
                new ObjectParameter("LName", lName) :
                new ObjectParameter("LName", typeof(string));
    
            var passwordParameter = password != null ?
                new ObjectParameter("Password", password) :
                new ObjectParameter("Password", typeof(string));
    
            var mACPasswordParameter = mACPassword != null ?
                new ObjectParameter("MACPassword", mACPassword) :
                new ObjectParameter("MACPassword", typeof(string));
    
            var designationParameter = designation != null ?
                new ObjectParameter("Designation", designation) :
                new ObjectParameter("Designation", typeof(string));
    
            var userTypeParameter = userType != null ?
                new ObjectParameter("UserType", userType) :
                new ObjectParameter("UserType", typeof(string));
    
            var imageBytesParameter = imageBytes != null ?
                new ObjectParameter("ImageBytes", imageBytes) :
                new ObjectParameter("ImageBytes", typeof(byte[]));
    
            var extensionParameter = extension != null ?
                new ObjectParameter("Extension", extension) :
                new ObjectParameter("Extension", typeof(string));
    
            var lastLoginParameter = lastLogin.HasValue ?
                new ObjectParameter("LastLogin", lastLogin) :
                new ObjectParameter("LastLogin", typeof(System.DateTime));
    
            var isActiveParameter = isActive.HasValue ?
                new ObjectParameter("IsActive", isActive) :
                new ObjectParameter("IsActive", typeof(bool));
    
            var plant1Parameter = plant1.HasValue ?
                new ObjectParameter("Plant1", plant1) :
                new ObjectParameter("Plant1", typeof(bool));
    
            var plant2Parameter = plant2.HasValue ?
                new ObjectParameter("Plant2", plant2) :
                new ObjectParameter("Plant2", typeof(bool));
    
            var plant3Parameter = plant3.HasValue ?
                new ObjectParameter("Plant3", plant3) :
                new ObjectParameter("Plant3", typeof(bool));
    
            var loginTypeParameter = loginType != null ?
                new ObjectParameter("LoginType", loginType) :
                new ObjectParameter("LoginType", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("uspInsertUser", userCodeParameter, fNameParameter, mNameParameter, lNameParameter, passwordParameter, mACPasswordParameter, designationParameter, userTypeParameter, imageBytesParameter, extensionParameter, lastLoginParameter, isActiveParameter, plant1Parameter, plant2Parameter, plant3Parameter, loginTypeParameter);
        }
    
        public virtual ObjectResult<UsrGet_BallancePODocNoListFromVendor_Result> UsrGet_BallancePODocNoListFromVendor(Nullable<int> vendor_Code, Nullable<int> plant)
        {
            var vendor_CodeParameter = vendor_Code.HasValue ?
                new ObjectParameter("Vendor_Code", vendor_Code) :
                new ObjectParameter("Vendor_Code", typeof(int));
    
            var plantParameter = plant.HasValue ?
                new ObjectParameter("Plant", plant) :
                new ObjectParameter("Plant", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<UsrGet_BallancePODocNoListFromVendor_Result>("UsrGet_BallancePODocNoListFromVendor", vendor_CodeParameter, plantParameter);
        }
    
        public virtual ObjectResult<UsrGet_BallancePOItemNOListFromVendorAndPO_Result> UsrGet_BallancePOItemNOListFromVendorAndPO(Nullable<int> vendor_Code, string pO_DOC_NO, Nullable<int> pInvId)
        {
            var vendor_CodeParameter = vendor_Code.HasValue ?
                new ObjectParameter("Vendor_Code", vendor_Code) :
                new ObjectParameter("Vendor_Code", typeof(int));
    
            var pO_DOC_NOParameter = pO_DOC_NO != null ?
                new ObjectParameter("PO_DOC_NO", pO_DOC_NO) :
                new ObjectParameter("PO_DOC_NO", typeof(string));
    
            var pInvIdParameter = pInvId.HasValue ?
                new ObjectParameter("PInvId", pInvId) :
                new ObjectParameter("PInvId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<UsrGet_BallancePOItemNOListFromVendorAndPO_Result>("UsrGet_BallancePOItemNOListFromVendorAndPO", vendor_CodeParameter, pO_DOC_NOParameter, pInvIdParameter);
        }
    
        public virtual ObjectResult<UsrGet_BallancePOItemNOListFromVendorAndPO_GST_Result> UsrGet_BallancePOItemNOListFromVendorAndPO_GST(Nullable<int> vendor_Code, string pO_DOC_NO, Nullable<int> pInvId)
        {
            var vendor_CodeParameter = vendor_Code.HasValue ?
                new ObjectParameter("Vendor_Code", vendor_Code) :
                new ObjectParameter("Vendor_Code", typeof(int));
    
            var pO_DOC_NOParameter = pO_DOC_NO != null ?
                new ObjectParameter("PO_DOC_NO", pO_DOC_NO) :
                new ObjectParameter("PO_DOC_NO", typeof(string));
    
            var pInvIdParameter = pInvId.HasValue ?
                new ObjectParameter("PInvId", pInvId) :
                new ObjectParameter("PInvId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<UsrGet_BallancePOItemNOListFromVendorAndPO_GST_Result>("UsrGet_BallancePOItemNOListFromVendorAndPO_GST", vendor_CodeParameter, pO_DOC_NOParameter, pInvIdParameter);
        }
    
        public virtual ObjectResult<UsrGet_BallancePOItemNOListFromVendorAndPO_Search_Result> UsrGet_BallancePOItemNOListFromVendorAndPO_Search(Nullable<int> vendor_Code, string pO_DOC_NO, Nullable<int> item_no, Nullable<int> pINVID)
        {
            var vendor_CodeParameter = vendor_Code.HasValue ?
                new ObjectParameter("Vendor_Code", vendor_Code) :
                new ObjectParameter("Vendor_Code", typeof(int));
    
            var pO_DOC_NOParameter = pO_DOC_NO != null ?
                new ObjectParameter("PO_DOC_NO", pO_DOC_NO) :
                new ObjectParameter("PO_DOC_NO", typeof(string));
    
            var item_noParameter = item_no.HasValue ?
                new ObjectParameter("item_no", item_no) :
                new ObjectParameter("item_no", typeof(int));
    
            var pINVIDParameter = pINVID.HasValue ?
                new ObjectParameter("PINVID", pINVID) :
                new ObjectParameter("PINVID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<UsrGet_BallancePOItemNOListFromVendorAndPO_Search_Result>("UsrGet_BallancePOItemNOListFromVendorAndPO_Search", vendor_CodeParameter, pO_DOC_NOParameter, item_noParameter, pINVIDParameter);
        }
    
        public virtual int UsrGet_POStatus(Nullable<int> vendor_Code, string fLAG)
        {
            var vendor_CodeParameter = vendor_Code.HasValue ?
                new ObjectParameter("Vendor_Code", vendor_Code) :
                new ObjectParameter("Vendor_Code", typeof(int));
    
            var fLAGParameter = fLAG != null ?
                new ObjectParameter("FLAG", fLAG) :
                new ObjectParameter("FLAG", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UsrGet_POStatus", vendor_CodeParameter, fLAGParameter);
        }
    
        public virtual ObjectResult<UsrGet_POStatus2_Result> UsrGet_POStatus2(Nullable<int> userId, Nullable<int> vendor_Code, string fLAG)
        {
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(int));
    
            var vendor_CodeParameter = vendor_Code.HasValue ?
                new ObjectParameter("Vendor_Code", vendor_Code) :
                new ObjectParameter("Vendor_Code", typeof(int));
    
            var fLAGParameter = fLAG != null ?
                new ObjectParameter("FLAG", fLAG) :
                new ObjectParameter("FLAG", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<UsrGet_POStatus2_Result>("UsrGet_POStatus2", userIdParameter, vendor_CodeParameter, fLAGParameter);
        }
    }
}
